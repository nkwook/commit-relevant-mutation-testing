a/samples/post_commits/case3/case3.py b/samples/post_commits/case3/case3.py
index b38c533..fc3164f 100644
--- a/samples/post_commits/case3/case3.py
+++ b/samples/post_commits/case3/case3.py
@@ -4,10 +4,6 @@ def sort1(arr):
4:         for j in range(0, n - i - 1):
5:             if arr[j] > arr[j + 1]:
6:                 (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])
 :-            if arr[j] == arr[j + 1]: # fix. stable sort가 깨지는 까다로운 버그!
 :-                print(arr[j], arr[j + 1])
 :-                arr[j] = arr[j + 1]
 :-
7: def sort2(arr):
8:     if len(arr) > 1:
9:         mid = len(arr) // 2
@@ -16,7 +12,7 @@ def sort2(arr):
12:         # right = arr[mid-1:] #fix. tiny bug
13:         sort2(left)
14:         sort2(right)
  :-        i = j = k = 0
15:+        i = j = k = j = 0
16:         while i < len(left) and j < len(right):
17:             if left[i] < right[j]:
18:                 arr[k] = left[i]
@@ -25,15 +21,14 @@ def sort2(arr):
21:                 arr[k] = right[j]
22:                 j += 1
23:             k += 1
  :-        while i < len(left):
  :-            arr[k] = left[i]
  :-            i += 1
  :-            k += 1
24:         while j < len(right):
25:             arr[k] = right[j]
26:             j += 1
27:             k += 1
  :-
28:+        while i < len(left):
29:+            arr[k] = left[i]
30:+            i += 1
31:+            k += 1
32: def get_pivot(arr, low, high):
33:     i = low - 1
34:     pivot = arr[high]
@@ -43,7 +38,6 @@ def get_pivot(arr, low, high):
38:             (arr[i], arr[j]) = (arr[j], arr[i])
39:     (arr[i + 1], arr[high]) = (arr[high], arr[i + 1])
40:     return i + 1
  :-
41: def help_sort3(arr, low, high):
42:     if len(arr) == 1:
43:         return arr
@@ -51,6 +45,5 @@ def help_sort3(arr, low, high):
45:         pivot = get_pivot(arr, low, high)
46:         help_sort3(arr, low, pivot - 1)
47:         help_sort3(arr, pivot + 1, high)
  :-
48: def sort3(arr):
49:     return help_sort3(arr, 0, len(arr) - 1)
  :\ No newline at end of file
